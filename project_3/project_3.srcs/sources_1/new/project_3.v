`timescale 1ns / 1ps

//////////////////////////////////////////////////////////////////////////////////
// 7段数码管译码模块（保持不变）
//////////////////////////////////////////////////////////////////////////////////
module _7Seg_Driver_Decode(
    input [3:0] SW,        // 4位输入
    output reg [7:0] SEG   // 7段译码输出（reg类型）
);

always @(*) begin
    case (SW)
        4'b0000: SEG = 8'b11000000; // 0
        4'b0001: SEG = 8'b11111001; // 1
        4'b0010: SEG = 8'b10100100; // 2
        4'b0011: SEG = 8'b10110000; // 3
        4'b0100: SEG = 8'b10011001; // 4
        4'b0101: SEG = 8'b10010010; // 5
        4'b0110: SEG = 8'b10000010; // 6
        4'b0111: SEG = 8'b11111000; // 7
        4'b1000: SEG = 8'b10000000; // 8
        4'b1001: SEG = 8'b10011000; // 9
        4'b1010: SEG = 8'b10001000; // A
        4'b1011: SEG = 8'b10000011; // b
        4'b1100: SEG = 8'b11000110; // C
        4'b1101: SEG = 8'b10100001; // d
        4'b1110: SEG = 8'b10000110; // E
        4'b1111: SEG = 8'b10001110; // F
        default: SEG = 8'b11111111; // 全灭
    endcase
end

endmodule

//////////////////////////////////////////////////////////////////////////////////
// 数码管选择模块（关键修改）
//////////////////////////////////////////////////////////////////////////////////
module _7Seg_Driver_Selector(
    input [2:0] SW,        // 3位选择信号
    output reg [7:0] AN    // 片选信号输出（reg类型）
);

always @(*) begin
    // 优化后的片选逻辑
    AN = ~(8'b00000001 << SW);  // 等价于原式 8'b11111111 - (8'b00000001 << SW)
end

endmodule

//////////////////////////////////////////////////////////////////////////////////
// 顶层模块（关键修改）
//////////////////////////////////////////////////////////////////////////////////
module _7Seg_Driver_Choice(
    input [15:0] SW,       // 16位拨码开关
    output [7:0] SEG,      // 改为wire类型（重要！）
    output [7:0] AN,       // 保持wire类型
    output [15:0] LED      // LED直连
);

// 直接实例化连接（移除冗余的中间信号）
_7Seg_Driver_Decode decoder (
    .SW(SW[3:0]),         // 低4位控制显示内容
    .SEG(SEG)             // 直接连接顶层输出
);

_7Seg_Driver_Selector selector (
    .SW(SW[15:13]),       // 高3位控制片选
    .AN(AN)               // 直接连接顶层输出
);

assign LED = SW;          // LED直连开关状态

endmodule